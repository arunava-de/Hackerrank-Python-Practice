class Stack(object):

    def __init__(self):
        """Initialize an empty stack"""
        self.items = []

    def push(self, item):
        """Push a new item onto the stack"""
        self.items.append(item)

    def pop(self):
        """Remove and return the last item"""
        # If the stack is empty, return None
        # (it would also be reasonable to throw an exception)
        if self.isempty():
            return None

        return self.items.pop()
    
    def isempty(self):
        if self.items == []:
            return True
        else:
            return False
    
    def peek(self):
        if self.isempty():
            return None
        else:
            return self.items[-1]

n = int(input())
h = list(map(int,input().split()))
s = Stack()

h.append(0)
res = 0
i = 0

while i<n+1:
    if s.isempty() or h[i]>h[s.peek()]:
        s.push(i)
        i += 1
    else:
        t = s.pop()
        if s.isempty():
            temp = h[t]*i
        else:
            temp = h[t]*(i - s.peek() - 1)
        res = max(res,temp)

print(res)
